from API.Vzense_api_560 import *
import cv2

camera = VzenseTofCam()

camera.init()
camera.set_data_mode(DataMode.Depth_RGB)
camera.set_mapper(Sensor.RGB,True)
camera.set_depth_range(Range.Mid)
camera.set_RGB_distortion_correction(True)
camera.set_depth_distortion_correction(True)
camera.set_threshold(80)

while True:
    frameready = camera.read_frame()
    if frameready and frameready.mappedRGB:      
        frame = camera.get_frame(Frame.MappedRGB)
        mappedrgb = camera.gen_image(frame,Frame.RGB)
        break

img_gray = cv2.cvtColor(mappedrgb,cv2.COLOR_BGR2GRAY)
ret,thresh = cv2.threshold(img_gray,160,255,cv2.THRESH_BINARY)
polcont_c = np.ones(thresh.shape[:2], dtype="uint8") * 255
polcont_m = np.zeros(thresh.shape[:2], dtype="uint8") * 255
contours,hierarchy = cv2.findContours(thresh,cv2.RETR_CCOMP,cv2.CHAIN_APPROX_SIMPLE)
max_cont = max(contours, key=cv2.contourArea)
eps = .01*cv2.arcLength(max_cont,True)
approx = cv2.approxPolyDP(max_cont,eps,True)
polcont_c = cv2.cvtColor(polcont_c,cv2.COLOR_GRAY2BGR)
polcont_m = cv2.cvtColor(polcont_m,cv2.COLOR_GRAY2BGR)

for i in range(len(approx)):
    cv2.putText(polcont_c,str(tuple(approx[i][0])),approx[i][0],cv2.FONT_HERSHEY_COMPLEX,.5,(0,0,255))
    
cv2.drawContours(polcont_c,[approx],-1,(0,0,0),2)
cv2.drawContours(polcont_m,[approx],0,(255,255,255),-1)
cv2.imwrite('save/polcont.png',polcont_c)
cv2.destroyAllWindows()

camera.set_threshold()
frameready = camera.read_frame()

if frameready and frameready.depth:      
    frame_d = camera.get_frame(Frame.Depth)
    depth = camera.gen_image(frame_d,Frame.Depth)
    masked_depth = cv2.bitwise_and(depth,polcont_m)
    cv2.imwrite("save/maskdep.png",masked_depth)

if frameready and frameready.mappedRGB:      
    frame_m = camera.get_frame(Frame.MappedRGB)
    mappedrgb = camera.gen_image(frame_m,Frame.RGB)
    masked_rgb = cv2.bitwise_and(mappedrgb,polcont_m)
    cv2.imwrite("save/mappedrgb.png",masked_rgb)
    print("Successfully saved")

camera.stop_stream() 
camera.close()